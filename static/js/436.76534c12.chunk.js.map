{"version":3,"file":"static/js/436.76534c12.chunk.js","mappings":"2NACA,GAAgB,KAAO,wBAAwB,KAAO,wBAAwB,IAAM,uBAAuB,OAAS,0BAA0B,UAAY,6BAA6B,IAAM,uBAAuB,OAAS,0BAA0B,OAAS,2B,SCgChQ,EA7Ba,SAAC,GAAY,IAAD,EAAVA,EAAU,EAAVA,KACZ,GAAsCC,EAAAA,EAAAA,UAAQ,UAACC,KAAKC,MAAMC,aAAaC,QAAb,UAAwBL,EAAKM,GAA7B,yBAAZ,UAA9C,eAAOC,EAAP,KAAoBC,EAApB,MAGDC,EAAAA,EAAAA,YAAU,WACRL,aAAaM,QAAb,UAAwBV,EAAKM,GAA7B,gBAA+CJ,KAAKS,UAAUJ,GAC/D,GAAE,CAACP,EAAKM,GAAIC,IAYX,OACI,iCACI,gBAAKK,IAAG,UAAKZ,EAAKa,QAAUC,IAAI,SAASC,MAAO,GAAIC,OAAQ,GAAIC,UAAWC,EAAAA,OAC3E,eAAGD,UAAWC,EAAAA,OAAd,UAA2BlB,EAAKmB,OAAO,cACvC,eAAGF,UAAWC,EAAAA,UAAd,UAA8BlB,EAAKoB,UAAUC,iBAAiBC,QAAQ,wBAAyB,KAAK,gBAClGf,GAAa,mBAAQgB,KAAK,SAASjB,GAAIN,EAAKM,GAAIW,UAAWC,EAAAA,OAAYM,QAT1D,WACvBhB,GAAe,EACjB,EAOyB,SAAqF,eACjG,mBAAQe,KAAK,SAASjB,GAAIN,EAAKM,GAAIW,UAAWC,EAAAA,IAASM,QAf9C,WACpBhB,GAAe,EAEhB,EAYY,SAA+E,aAG7F,ECVD,EAlBiB,SAAC,GAAe,IAAbiB,EAAY,EAAZA,MAElB,OACE,+BACE,gBAAKR,UAAWC,EAAAA,UAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SACGO,EAAMC,KAAI,SAAC1B,GAAD,OACT,eAAkBiB,UAAWC,EAAAA,KAA7B,UACE,SAAC,EAAD,CAAMlB,KAAMA,KADLA,EAAKM,GADL,SASpB,E,SCZKqB,EACO,UADPA,EAEQ,WAFRA,EAGQ,WAsDd,EAnDe,WAEb,OAA4B1B,EAAAA,EAAAA,UAAS,MAArC,eAAO2B,EAAP,KAAeC,EAAf,KACA,GAA0B5B,EAAAA,EAAAA,UAAS,IAAnC,eAAOwB,EAAP,KAAcK,EAAd,KACA,GAA0B7B,EAAAA,EAAAA,UAAS,MAAnC,eAAO8B,EAAP,KAAcC,EAAd,KACA,GAAwB/B,EAAAA,EAAAA,UAAS,GAAjC,eAAOgC,EAAP,KAAaC,EAAb,MAEAzB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAG,iEAA6DF,EAA7D,YAETJ,EAAUF,GAEVS,MAAMD,EAAK,CACTE,OAAQ,MACRC,QAAS,CAAC,eAAe,sBACxBC,MAAK,SAAAC,GACN,GAAIA,EAAIC,GACR,OAAOD,EAAIE,MAEZ,IAAEH,MAAK,SAAAI,GACNb,GAAS,SAACc,GAAD,wBAAYA,IAAZ,OAAqBD,GAArB,IACTd,EAAUF,EACX,IAAEkB,OAAM,SAAAd,GACPC,EAASD,GACTF,EAAUF,EACX,GAEF,GAAE,CAACM,EAAMC,IAEV,IAIMY,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,mBAAQxB,KAAK,SAASN,UAAWC,EAAAA,OAAYM,QANzB,WACtBsB,EAAS,IACV,EAIG,SAAuE,WACtElB,IAAWD,IAAmB,SAACqB,EAAA,EAAD,IAC9BpB,IAAWD,IAAoB,yBAAMI,EAAMkB,UAC3CxB,IAAS,SAAC,EAAD,CAAUA,MAAOA,IAC1BA,EAAMyB,OAAS,KAAM,mBAAQ3B,KAAK,SAASN,UAAWC,EAAAA,OAAYM,QAhBnD,WAClBU,GAAQ,SAACU,GAAD,OAAUA,EAAO,CAAjB,GACT,EAcyB,SAAmE,kBAI9F,C","sources":["webpack://react-homework-template/./src/components/usersList/UsersList.module.css?d862","components/user/User.jsx","components/usersList/UsersList.jsx","pages/Tweets.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UsersList_list__XxI1L\",\"item\":\"UsersList_item__u3s6A\",\"img\":\"UsersList_img__4XBXe\",\"tweets\":\"UsersList_tweets__+OKJC\",\"followers\":\"UsersList_followers__UTt+h\",\"btn\":\"UsersList_btn__HuexW\",\"btnFol\":\"UsersList_btnFol__4AtoM\",\"button\":\"UsersList_button__cKmKS\"};","import { useEffect, useState } from \"react\";\nimport css from \"../usersList/UsersList.module.css\";\n\n\nconst User = ({user}) => {\n   const [isFollowing, setIsFollowing] = useState(JSON.parse(localStorage.getItem(`${user.id}-isFollowing`)) ?? false);\n \n\n  useEffect(() => {\n    localStorage.setItem(`${user.id}-isFollowing`, JSON.stringify(isFollowing));\n  }, [user.id, isFollowing])\n \n  \n  const onFollowClick = () => {  \n    setIsFollowing(true);    \n   \n  }\n\n  const onFollowingClick = () => {\n    setIsFollowing(false);   \n } \n    \n    return (\n        <>\n            <img src={`${user.avatar}`} alt='avatar' width={62} height={62} className={css.img}/>\n            <p className={css.tweets}>{user.tweets} tweets</p>\n            <p className={css.followers}>{user.followers.toLocaleString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} followers</p>\n            { isFollowing? <button type=\"button\" id={user.id} className={css.btnFol} onClick={onFollowingClick}>following</button> :\n               <button type=\"button\" id={user.id} className={css.btn} onClick={onFollowClick}>follow</button>}\n        </>\n    )\n}\n\nexport default User;","import User from \"components/user/User\";\nimport css from \"./UsersList.module.css\";\n\nconst UserList = ({ users }) => { \n  \n  return (\n    <>\n      <div className={css.container}>         \n        <ul className={css.list}>\n          {users.map((user) => (\n            <li key={user.id} className={css.item}>\n              <User user={user} />                  \n            </li>\n          ))}\n        </ul>        \n      </div>\n    </>\n  );\n};\n\n\nexport default UserList;","import { Loader } from \"components/Loader\";\nimport UserList from \"components/usersList/UsersList\";\nimport { useEffect, useState } from \"react\";\nimport css from \"../components/usersList/UsersList.module.css\";\nimport {  useNavigate } from \"react-router-dom\";\n\nconst Status = {\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected'\n};\n\nconst Tweets = () => { \n\n  const [status, setStatus] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null); \n  const [page, setPage] = useState(1); \n  \n  useEffect(() => {\n    const URL = `https://645242e1a2860c9ed4068029.mockapi.io/users?page=${page}&limit=3`;\n\n    setStatus(Status.PENDING);\n  \n    fetch(URL, {\n      method: 'GET',\n      headers: {'content-type':'application/json'},\n    }).then(res => {\n      if (res.ok) {\n      return res.json();\n      }  \n    }).then(tasks => {\n      setUsers((prev)=>[...prev, ...tasks]);\n      setStatus(Status.RESOLVED); \n    }).catch(error => {\n      setError(error);\n      setStatus(Status.REJECTED);\n    })\n  \n  }, [page, setPage])    \n \n  const handleClick = () => {\n    setPage((prev) => prev + 1);\n  }\n\n  const navigate = useNavigate();\n\n  const handleBackClick = () => {\n    navigate('/');\n  }\n\n  return (\n    <>\n      <button type=\"button\" className={css.button} onClick={handleBackClick}> Back </button>\n      {status === Status.PENDING  && <Loader />}\n      {status === Status.REJECTED && (<div>{error.message}</div>)}  \n      {users && <UserList users={users} />}\n      {users.length < 12 && <button type=\"button\" className={css.button} onClick={handleClick}> Load More </button>}\n    </>\n  \n  );\n};\n\nexport default Tweets;"],"names":["user","useState","JSON","parse","localStorage","getItem","id","isFollowing","setIsFollowing","useEffect","setItem","stringify","src","avatar","alt","width","height","className","css","tweets","followers","toLocaleString","replace","type","onClick","users","map","Status","status","setStatus","setUsers","error","setError","page","setPage","URL","fetch","method","headers","then","res","ok","json","tasks","prev","catch","navigate","useNavigate","Loader","message","length"],"sourceRoot":""}